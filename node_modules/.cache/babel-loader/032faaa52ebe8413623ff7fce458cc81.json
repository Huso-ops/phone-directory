{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  emits: \"add-directory\",\n\n  data() {\n    return {\n      directory: {\n        name: '',\n        phoneNumber: '',\n        email: ''\n      },\n      msg: []\n    };\n  },\n\n  props: ['openmodal', 'lists'],\n  errors: {},\n\n  validateForm() {\n    let x = document[\"fname\"].value;\n\n    if (x == \"\") {\n      alert(\"Name must be filled out\");\n      return false;\n    }\n\n    let y = document[\"fphoneNumber\"].value;\n\n    if (y == \"\") {\n      alert(\"Number must be filled out\");\n      return false;\n    }\n\n    let z = document[\"femail\"].value;\n\n    if (z == \"\") {\n      alert(\"Number must be filled out\");\n      return false;\n    }\n  },\n\n  watch: {\n    email(value) {\n      this.directory.email = value;\n      this.validateEmail(value);\n    }\n\n  },\n  methods: {\n    close() {\n      this.$emit('closeRequest');\n    },\n\n    async save() {\n      this.validateForm();\n\n      try {\n        await axios.post('http://localhost:8080/api/phone/add', this.directory).then(response => {\n          this.simple = response.data.data;\n          console.log(response);\n        });\n      } catch (error) {\n        console.log(error);\n      }\n\n      this.$props.lists.push(this.simple);\n      this.$props.lists.sort(function (a, b) {\n        if (a.name > b.name) {\n          return 1;\n        }\n\n        if (a.name < b.name) {\n          return -1;\n        }\n      });\n      this.close();\n    },\n\n    submitForm() {\n      const nameIsValid = !this.directory.name;\n      const formIsValid = nameIsValid;\n\n      if (formIsValid) {\n        console.log('form submitted');\n      } else {\n        console.log(\"Invalid form\");\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAiDA,OAAOA,KAAP,MAAkB,OAAlB;AACA,eAAe;EACVC,KAAI,EAAI,eADE;;EAIfC,IAAI,GAAE;IACJ,OAAQ;MACNC,SAAS,EAAC;QACRC,IAAI,EAAC,EADG;QAERC,WAAW,EAAC,EAFJ;QAGRC,KAAK,EAAC;MAHE,CADJ;MAMVC,GAAG,EAAC;IANM,CAAR;EAQD,CAbc;;EAmBbC,KAAK,EAAE,CAAC,WAAD,EAAa,OAAb,CAnBM;EAoBbC,MAAM,EAAC,EApBM;;EAsBdC,YAAY,GAAG;IACd,IAAIC,IAAIC,QAAQ,CAAC,OAAD,CAAR,CAAkBC,KAA1B;;IACA,IAAIF,KAAK,EAAT,EAAa;MACXG,KAAK,CAAC,yBAAD,CAAL;MACA,OAAO,KAAP;IACF;;IACA,IAAIC,IAAIH,QAAQ,CAAC,cAAD,CAAR,CAAyBC,KAAjC;;IACA,IAAIE,KAAK,EAAT,EAAa;MACXD,KAAK,CAAC,2BAAD,CAAL;MACA,OAAO,KAAP;IACF;;IACC,IAAIE,IAAIJ,QAAQ,CAAC,QAAD,CAAR,CAAmBC,KAA3B;;IACD,IAAIG,KAAK,EAAT,EAAa;MACXF,KAAK,CAAC,2BAAD,CAAL;MACA,OAAO,KAAP;IACF;EACD,CAtCc;;EAwCbG,KAAK,EAAE;IAELX,KAAK,CAACO,KAAD,EAAO;MAEV,KAAKV,SAAL,CAAeG,KAAf,GAAuBO,KAAvB;MACA,KAAKK,aAAL,CAAmBL,KAAnB;IACF;;EANK,CAxCM;EAoDbM,OAAO,EAAC;IACNC,KAAK,GAAE;MACL,KAAKC,KAAL,CAAW,cAAX;IAED,CAJK;;IAMP,MAAMC,IAAN,GAAY;MACZ,KAAKZ,YAAL;;MACC,IAAG;QACN,MAAMV,KAAK,CAACuB,IAAN,CAAW,qCAAX,EAAmD,KAAKpB,SAAxD,EAAmEqB,IAAnE,CAAyEC,QAAD,IAAa;UAG1F,KAAKC,MAAL,GAAcD,QAAQ,CAACvB,IAAT,CAAcA,IAA5B;UAEAyB,OAAO,CAACC,GAAR,CAAYH,QAAZ;QAAqB,CALhB,CAAN;MAUI,CAXD,CAWC,OAAMI,KAAN,EAAY;QACXF,OAAO,CAACC,GAAR,CAAYC,KAAZ;MACF;;MAGH,KAAKC,MAAL,CAAYC,KAAZ,CAAkBC,IAAlB,CAAuB,KAAKN,MAA5B;MACA,KAAKI,MAAL,CAAYC,KAAZ,CAAkBE,IAAlB,CAAuB,UAASC,CAAT,EAAWC,CAAX,EAAa;QACjC,IAAGD,CAAC,CAAC9B,IAAF,GAAO+B,CAAC,CAAC/B,IAAZ,EAAiB;UACf,OAAO,CAAP;QACF;;QAAE,IAAK8B,CAAC,CAAC9B,IAAF,GAAO+B,CAAC,CAAC/B,IAAd,EAAoB;UACpB,OAAO,CAAC,CAAR;QACF;MACD,CANF;MASC,KAAKgB,KAAL;IAEG,CApCK;;IAsCRgB,UAAS,GAAK;MACd,MAAMC,WAAU,GAAI,CAAC,KAAKlC,SAAL,CAAeC,IAApC;MACA,MAAMkC,WAAU,GAAID,WAApB;;MACA,IAAGC,WAAH,EAAe;QACbX,OAAO,CAACC,GAAR,CAAY,gBAAZ;MACD,CAFD,MAEM;QACJD,OAAO,CAACC,GAAR,CAAY,cAAZ;MACF;IACA;;EA9CQ;AApDK,CAAf","names":["axios","emits","data","directory","name","phoneNumber","email","msg","props","errors","validateForm","x","document","value","alert","y","z","watch","validateEmail","methods","close","$emit","save","post","then","response","simple","console","log","error","$props","lists","push","sort","a","b","submitForm","nameIsValid","formIsValid"],"sourceRoot":"","sources":["C:\\Users\\huso_\\OneDrive\\Masaüstü\\pbb_app\\pb\\src\\components\\AddDirectory.vue"],"sourcesContent":["<template>\r\n\r\n<div class=\"modal \" :class='openmodal'>\r\n  <div class=\"modal-background\"></div>\r\n<form @submt.prevent=\"submitForm\" autocomplete=\"off\">\r\n  <div class=\"modal-card\">\r\n    <header class=\"modal-card-head\">\r\n      <p class=\"modal-card-title\">Add new</p>\r\n     \r\n      <button class=\"delete\" aria-label=\"close\" @click=\"close\"></button>\r\n    </header>\r\n    <section class=\"modal-card-body\">\r\n\r\n     <div class=\"field\">\r\n  <label class=\"label\">Name</label>\r\n  <div class=\"control\">\r\n\r\n    <input class=\"input\" type=\"text\" placeholder=\"Name\" v-model=\"directory.name\" required=\"true\" name=\"fname\" >\r\n\r\n  </div>\r\n</div>\r\n     <div class=\"field\">\r\n  <label class=\"label\">phone</label>\r\n  <div class=\"control\">\r\n    <input class=\"input\" type=\"number\" onkeydown=\"javascript: return ['Backspace','Delete','ArrowLeft','ArrowRight'].includes(event.code) ? true : !isNaN(Number(event.key)) && event.code!=='Space'\"  placeholder=\"Phone\" v-model=\"directory.phoneNumber\"  required=\"true\" name=\"fphoneNumber\" >\r\n\r\n  </div>\r\n</div>\r\n     <div class=\"field\">\r\n  <label class=\"label\">email</label>\r\n  <div class=\"control\">\r\n    <input  class=\"input\" type=\"text\" pattern=\"/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/\" placeholder=\"Email\" v-model=\"directory.email\"  required=\"true\" name=\"femail\">\r\n     <br>\r\n      <span v-if=\"msg.email\">{{msg.email}}</span>\r\n  </div>\r\n</div>\r\n    </section>\r\n    <footer class=\"modal-card-foot\">\r\n      <button class=\"button is-success\" @click=\"save\" >Save changes</button>\r\n      <button class=\"button\" @click=\"close\">Cancel</button>\r\n    </footer>\r\n  </div>\r\n</form>\r\n</div>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport axios from \"axios\";\r\nexport default {\r\n     emits : \"add-directory\",\r\n\r\n\r\ndata(){\r\n  return  {\r\n    directory:{\r\n      name:'',\r\n      phoneNumber:'',\r\n      email:''\r\n    },\r\nmsg:[],\r\n  }\r\n},\r\n\r\n\r\n\r\n\r\n\r\n  props: ['openmodal','lists'],\r\n  errors:{},\r\n\r\n validateForm() {\r\n  let x = document[\"fname\"].value;\r\n  if (x == \"\") {\r\n    alert(\"Name must be filled out\");\r\n    return false;\r\n  }\r\n  let y = document[\"fphoneNumber\"].value;\r\n  if (y == \"\") {\r\n    alert(\"Number must be filled out\");\r\n    return false\r\n  }\r\n   let z = document[\"femail\"].value;\r\n  if (z == \"\") {\r\n    alert(\"Number must be filled out\");\r\n    return false\r\n  }\r\n},\r\n\r\n  watch: {\r\n\r\n    email(value){\r\n\r\n      this.directory.email = value;\r\n      this.validateEmail(value);\r\n    }\r\n\r\n\r\n  },\r\n\r\n\r\n  methods:{\r\n    close(){\r\n      this.$emit('closeRequest')\r\n      \r\n    },\r\n\r\n   async save(){\r\n   this.validateForm();\r\n    try{\r\n await axios.post('http://localhost:8080/api/phone/add' , this.directory).then((response) =>{\r\n\r\n  \r\n  this.simple = response.data.data;\r\n\r\n  console.log(response)}\r\n  \r\n  \r\n  )\r\n\r\n    }catch(error){\r\n      console.log(error);\r\n    }\r\n       \r\n\r\n this.$props.lists.push(this.simple);\r\n this.$props.lists.sort(function(a,b){\r\n    if(a.name>b.name){\r\n      return 1;\r\n    } if ((a.name<b.name)){\r\n      return -1;\r\n    }\r\n  })\r\n\r\n  \r\n  this.close();\r\n \r\n    },\r\n\r\n  submitForm () {\r\n  const nameIsValid = !this.directory.name;\r\n  const formIsValid = nameIsValid;\r\n  if(formIsValid){\r\n    console.log('form submitted');\r\n  }else {\r\n    console.log(\"Invalid form\")\r\n  }\r\n  }\r\n  },\r\n\r\n\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}