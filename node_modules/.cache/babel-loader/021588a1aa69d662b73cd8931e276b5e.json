{"ast":null,"code":"import 'bulma';\nimport axios from \"axios\";\nimport AddDirectory from './AddDirectory.vue';\n/*\r\nimport 'font-awesome/scss/font-awesome.scss'\r\nimport 'font-awesome/scss/_variables.scss'\r\n*/\n\nexport default {\n  emits: \"look-panel\",\n  components: {\n    AddDirectory\n  },\n\n  data() {\n    return {\n      addActive: '',\n      lists: null\n    };\n  },\n\n  async mounted() {\n    try {\n      const response = await axios.get(`https://jsonplaceholder.typicode.com/posts`);\n      this.lists = response;\n    } catch (e) {\n      this.errors.push(e);\n    }\n  },\n\n  /*      axios.get(\"https://jsonplaceholder.typicode.com/posts\").then((response) => this.lists = response.data)\r\n  .catch((error) => console.log(error))*/\n  methods: {\n    openAddDirectory() {\n      this.addActive = 'is-active';\n    },\n\n    close() {\n      this.addActive = '';\n    },\n\n    api() {\n      axios.get(\"https://jsonplaceholder.typicode.com/posts\", this.$data.list).then(response => console.log(response)).catch(error => console.log(error));\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAuDA,OAAO,OAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA;AACA;AACA;AACA;;AACA,eAAe;EACXC,KAAI,EAAI,YADG;EAEXC,UAAU,EAAC;IACXF;EADW,CAFA;;EAMfG,IAAI,GAAE;IACN,OAAO;MACLC,SAAQ,EAAI,EADP;MAELC,KAAK,EAAC;IAFD,CAAP;EAKC,CAZc;;EAab,MAAMC,OAAN,GAAgB;IACd,IAAI;MACF,MAAMC,QAAO,GAAI,MAAMR,KAAK,CAACS,GAAN,CAAW,4CAAX,CAAvB;MACA,KAAKH,KAAL,GAAaE,QAAb;IACF,CAHA,CAGE,OAAOE,CAAP,EAAU;MACV,KAAKC,MAAL,CAAYC,IAAZ,CAAiBF,CAAjB;IACF;EACD,CApBY;;EAqBT;;EAING,OAAO,EAAC;IACNC,gBAAgB,GAAE;MAChB,KAAKT,SAAL,GAAiB,WAAjB;IACD,CAHK;;IAINU,KAAK,GAAE;MACL,KAAKV,SAAL,GAAiB,EAAjB;IACD,CANK;;IAOLW,GAAG,GAAE;MACJhB,KAAK,CAACS,GAAN,CAAU,4CAAV,EAAuD,KAAKQ,KAAL,CAAWC,IAAlE,EAAwEC,IAAxE,CAA8EX,QAAD,IAAcY,OAAO,CAACC,GAAR,CAAYb,QAAZ,CAA3F,EACDc,KADC,CACMC,KAAD,IAAWH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CADhB;IAGA;;EAXI;AAzBO,CAAf","names":["axios","AddDirectory","emits","components","data","addActive","lists","mounted","response","get","e","errors","push","methods","openAddDirectory","close","api","$data","list","then","console","log","catch","error"],"sourceRoot":"","sources":["C:\\Users\\huso_\\OneDrive\\Masaüstü\\pb-app\\pb\\src\\components\\LookPanel.vue"],"sourcesContent":["<template>\r\n<div>\r\n<html>\r\n <head>\r\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"\r\n          type=\"text/css\">\r\n</head> \r\n<body>\r\n<nav class=\"panel\">\r\n  <p class=\"panel-heading\">\r\n    PhoneBook <br>\r\n        <button class=\"button is-link is-outlined is-fullwidth\" @click=\"openAddDirectory\">\r\n        \r\n      Add New\r\n    </button>\r\n  </p>\r\n  <div class=\"panel-block\">\r\n    <p class=\"control has-icons-left\">\r\n      <input class=\"input\" type=\"text\" placeholder=\"Search\">\r\n      <span class=\"icon is-left\">\r\n        <i class=\"fas fa-search\" aria-hidden=\"true\"></i>\r\n      </span>\r\n    </p>\r\n  </div>\r\n\r\n\r\n  <a class=\"panel-block\" v-for=\"list,key in lists\" :key=\"list.id\">    \r\n<span class=\"is-9\" >\r\n  {{list}}\r\n</span>\r\n\r\n\r\n<span class=\"panel-icon  is-1\">\r\n<i class=\"has-text-danger fa-solid fa-trash\" aria-hidden=\"true\"></i>\r\n  </span>\r\n\r\n<span class=\"panel-icon  is-2\">\r\n<i class=\"has-text-info fa-solid fa-edit\" aria-hidden=\"true\"></i>\r\n    </span>       \r\n\r\n<span class=\"panel-icon  is-3\">\r\n<i class=\"has-text-primary fa-solid fa-eye\" aria-hidden=\"true\"></i>\r\n    </span>\r\n  </a>\r\n  \r\n\r\n\r\n</nav>\r\n<AddDirectory :openmodal='addActive' @closeRequest='close'></AddDirectory>\r\n</body>\r\n</html>\r\n</div>\r\n\r\n</template>\r\n<script>\r\nimport 'bulma'\r\nimport axios from \"axios\";\r\nimport AddDirectory from './AddDirectory.vue';\r\n/*\r\nimport 'font-awesome/scss/font-awesome.scss'\r\nimport 'font-awesome/scss/_variables.scss'\r\n*/\r\nexport default {\r\n    emits : \"look-panel\",\r\n    components:{\r\n    AddDirectory,\r\n\r\n},\r\ndata(){\r\nreturn {\r\n  addActive : '',\r\n  lists:null,\r\n  \r\n}\r\n},\r\n  async mounted() {\r\n    try {\r\n      const response = await axios.get(`https://jsonplaceholder.typicode.com/posts`)\r\n      this.lists = response\r\n    } catch (e) {\r\n      this.errors.push(e)\r\n    }\r\n  },\r\n      /*      axios.get(\"https://jsonplaceholder.typicode.com/posts\").then((response) => this.lists = response.data)\r\n  .catch((error) => console.log(error))*/\r\n  \r\n\r\nmethods:{\r\n  openAddDirectory(){\r\n    this.addActive = 'is-active';\r\n  },\r\n  close(){\r\n    this.addActive = ''\r\n  },\r\n   api(){\r\n    axios.get(\"https://jsonplaceholder.typicode.com/posts\",this.$data.list).then((response) => console.log(response))\r\n  .catch((error) => console.log(error))\r\n \r\n    }\r\n}\r\n};\r\n</script>\r\n<style>\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}